---
import Card from '../ui/Card.astro';

export interface Props {
  title: string;
  value: string | number;
  change?: {
    value: number;
    type: 'increase' | 'decrease' | 'neutral';
  };
  icon?: string;
  description?: string;
  class?: string;
  id?: string;
}

const { 
  title, 
  value, 
  change, 
  icon, 
  description,
  class: className = '',
  ...rest 
} = Astro.props;

const changeClasses = {
  increase: 'text-green-500',
  decrease: 'text-red-500',
  neutral: 'text-muted-foreground'
};

const changeIcons = {
  increase: 'M13 7h8m0 0v8m0-8l-8 8-4-4-6 6',
  decrease: 'M13 17h8m0 0V9m0 8l-8-8-4 4-6-6',
  neutral: 'M20 12H4'
};
---

<Card class={`${className}`} hover {...rest}>
  <div class="flex items-center justify-between">
    <div class="flex-1">
      <p class="text-sm font-medium text-muted-foreground">{title}</p>
      <p class="text-2xl font-bold text-foreground">{value}</p>
      {change && (
        <div class={`flex items-center mt-1 text-sm ${changeClasses[change.type]}`}>
          <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={changeIcons[change.type]}></path>
          </svg>
          <span>{Math.abs(change.value)}%</span>
        </div>
      )}
      {description && (
        <p class="text-xs text-muted-foreground mt-1">{description}</p>
      )}
    </div>
    {icon && (
      <div class="p-3 bg-muted rounded-lg">
        <div class="w-6 h-6 text-foreground text-lg font-bold">{icon}</div>
      </div>
    )}
  </div>
</Card>
