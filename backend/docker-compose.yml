services:
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    restart: always
    container_name: auth-service
    hostname: "auth-service"
    ports:
      - 8080:8080
    environment:
      - PORT=8080
      - MONGO_DB_URI=mongodb://admin:admin@user_data_base:27017/userDB?authSource=admin
    depends_on:
      user_data_base:
        condition: service_healthy
    networks:
      - network

  user_data_base:
    hostname: "user_data_base"
    container_name: "user_data_base"
    image: mongo
    restart: always
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: userDB
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - user_data_base:/data/db
    networks:
      - network

  university-service:
    build:
      context: ./university-service
      dockerfile: Dockerfile
    restart: always
    container_name: university-service
    hostname: "university-service"
    ports:
      - 8088:8088
    environment:
      - PORT=8088
      - MONGO_DB_URI=mongodb://root:pass@university_data_base:27017/studentDB?authSource=admin
    depends_on:
      university_data_base:
        condition: service_healthy
    networks:
      - network

  employment-service:
    build:
      context: ./employment-service
      dockerfile: Dockerfile
    restart: always
    container_name: employment-service
    hostname: "employment-service"
    ports:
      - 8089:8089
    environment:
      - PORT=8089
      - MONGO_DB_URI=mongodb://root:pass@employment_data_base:27017/employmentDB?authSource=admin
    depends_on:
      employment_data_base:
        condition: service_healthy
    networks:
      - network

  university_data_base:
    hostname: "university_data_base"
    container_name: "university_data_base"
    image: mongo
    restart: always
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
      MONGO_INITDB_DATABASE: studentDB
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - university_data_base:/data/db
    networks:
      - network

  employment_data_base:
    hostname: "employment_data_base"
    container_name: "employment_data_base"
    image: mongo
    restart: always
    ports:
      - "27020:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
      MONGO_INITDB_DATABASE: employmentDB
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - employment_data_base:/data/db
    networks:
      - network

  # healthcare_db:
  #   image: mongo
  #   container_name: healthcare_db
  #   restart: on-failure
  #   networks:
  #     - network

volumes:
  user_data_base:
  university_data_base:
  employment_data_base:

networks:
  network:
    driver: bridge
